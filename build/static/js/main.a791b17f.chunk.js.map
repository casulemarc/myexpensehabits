{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/TransactionList.js","components/AddTransaction.js","components/IncomeExpenses.js","App.js","index.js"],"names":["Header","state","action","type","transaction","filter","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","TransactionList","className","text","Math","abs","onClick","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseFloat","htmlFor","onChange","target","placeholder","IncomeExpense","amounts","income","expenses","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a791b17f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h2>Expense Tracker</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transaction: state.transaction.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transaction: [action.payload, ...state.transaction],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n//initial dummy state list of transactions\r\nconst initialState = {\r\n  transaction: [], //list of transactions empty\r\n};\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provide Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //ACTIONS TO DO:\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transaction: state.transaction,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  //use context to manipulate balance\r\n  const { transaction } = useContext(GlobalContext);\r\n\r\n  //loop through all transactions and return amounts\r\n  const amounts = transaction.map((transaction) => transaction.amount);\r\n\r\n  //sum all amounts, reduce adds totals , toFixed returns decimals\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>$ {total}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst TransactionList = () => {\r\n  const { transaction } = useContext(GlobalContext);\r\n\r\n  //delete button\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  //assign a sign to money value = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className='list'>\r\n        {transaction.map((transaction) => (\r\n          <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n            {transaction.text}\r\n            <span>\r\n              {transaction.amount < 0 ? \"-\" : \"+\"}$\r\n              {Math.abs(transaction.amount)}\r\n            </span>\r\n            <button\r\n              onClick={() => deleteTransaction(transaction.id)}\r\n              className='delete-btn'\r\n            >\r\n              x\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import { useState, useContext } from \"react\"; //import useState\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport React from \"react\";\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState(\"\"); // to manipulate text label entered\r\n  const [amount, setAmount] = useState(0); //to manipulate amount label entered\r\n\r\n  //add button\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  //submit data\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //build new transaction list\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000),\r\n      text,\r\n      amount: parseFloat(amount), //convert neg value of string float(no double in JS)\r\n    };\r\n\r\n    //add transaction\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add New Expense</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n          <label htmlFor='text'>Expense Name</label>\r\n          <input\r\n            type='text'\r\n            value={text} //add in {}\r\n            onChange={(e) => setText(e.target.value)} //event function to manipulate text entered in text value\r\n            placeholder='Enter text...'\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor='amount'>\r\n            Expense Amount <br />\r\n            [use +ive: Income (500)] <br />\r\n            [use -ive: Expense (-23.99)]\r\n          </label>\r\n          <input\r\n            type='number'\r\n            value={amount} //add in {}\r\n            onChange={(e) => setAmount(e.target.value)} //event function to manipulate text entered in text value\r\n            placeholder='Enter amount...'\r\n          />\r\n        </div>\r\n        <button className='btn'>Add Expense</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpense = () => {\r\n  const { transaction } = useContext(GlobalContext);\r\n\r\n  //loop through amounts\r\n  const amounts = transaction.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  //expenses but in positive value *(-1)\r\n  const expenses =\r\n    amounts\r\n      .filter((item) => item < 0)\r\n      .reduce((acc, item) => acc + item, 0)\r\n      .toFixed(2) * -1;\r\n  return (\r\n    <div className='inc-exp-container'>\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className='money plus'>+${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className='money minus'>-${expenses}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpense;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport IncomeExpense from \"./components/IncomeExpenses\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className='container'>\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}